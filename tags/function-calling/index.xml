<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Function Calling on zhoukuncheng's Personal Blog</title><link>https://zhoukuncheng.github.io/tags/function-calling/</link><description>Recent content in Function Calling on zhoukuncheng's Personal Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 05 May 2024 16:11:34 +0800</lastBuildDate><atom:link href="https://zhoukuncheng.github.io/tags/function-calling/index.xml" rel="self" type="application/rss+xml"/><item><title>LLM Learning Series 2. Function Calling</title><link>https://zhoukuncheng.github.io/posts/llm-2-function-calling/</link><pubDate>Sun, 05 May 2024 16:11:34 +0800</pubDate><guid>https://zhoukuncheng.github.io/posts/llm-2-function-calling/</guid><description>Introduction For typical LLM interactions, a single prompt or a few rounds of chat are sufficient to achieve the desired result. However, some tasks require the LLM to access information beyond its internal knowledge base. For example, retrieving today&amp;rsquo;s weather information for a specific city or searching for a particular anime necessitates calling external functions. What is Function Calling? Function calling in LLMs empowers the models to generate JSON objects that trigger external functions within your code. This capability enables LLMs to connect with external tools and APIs, expanding their ability to perform diverse tasks. Function Calling Execution Steps User calls LLM API with tools and a user prompt: The user provides a prompt and specifies the available tools. What is the weather like in San Francisco? Define Tool Schema tools = [ { &amp;#34;type&amp;#34;: &amp;#34;function&amp;#34;, &amp;#34;function&amp;#34;: { &amp;#34;name&amp;#34;: &amp;#34;get_current_weather&amp;#34;, &amp;#34;description&amp;#34;: &amp;#34;Get the current weather in a given location&amp;#34;, &amp;#34;parameters&amp;#34;: { &amp;#34;type&amp;#34;: &amp;#34;object&amp;#34;, &amp;#34;properties&amp;#34;: { &amp;#34;location&amp;#34;: { &amp;#34;type&amp;#34;: &amp;#34;string&amp;#34;, &amp;#34;description&amp;#34;: &amp;#34;The city and state, e.g. San Francisco, CA&amp;#34;, }, &amp;#34;unit&amp;#34;: { &amp;#34;type&amp;#34;: &amp;#34;string&amp;#34;, &amp;#34;enum&amp;#34;: [&amp;#34;celsius&amp;#34;, &amp;#34;fahrenheit&amp;#34;]}, }, &amp;#34;required&amp;#34;: [&amp;#34;location&amp;#34;], }, }, } ] Define Dummy Function # Example function hard coded to return the same weather def get_current_weather(location, unit=&amp;#34;fahrenheit&amp;#34;): &amp;#34;&amp;#34;&amp;#34;Get</description></item></channel></rss>